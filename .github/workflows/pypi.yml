name: PyPi

jobs:
  linux:
    name: "Linux"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1.34.0
        with:
          target: ${{ matrix.target }}
          #manylinux: auto
          args: --all-features --release --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    # if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux ]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
